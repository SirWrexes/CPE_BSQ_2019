        -:    0:Source:src/list/node_destroy.c
        -:    0:Graph:/home/renard/repos/delivery/CPE_2019/CPE_BSQ_2019/lib/libfox/datastruct/node_destroy.gcno
        -:    0:Data:/home/renard/repos/delivery/CPE_2019/CPE_BSQ_2019/lib/libfox/datastruct/node_destroy.gcda
        -:    0:Runs:35
        -:    1:/*
        -:    2:** EPITECH PROJECT, 2019
        -:    3:** Libfox
        -:    4:** File description:
        -:    5:** Destroy a node and its data
        -:    6:*/
        -:    7:
        -:    8:#include <malloc.h>
        -:    9:#include <unistd.h>
        -:   10:
        -:   11:#include "datastruct/fox_list.h"
        -:   12:
        -:   13:__a((nonnull(1)))
function node_destroy called 7 returned 100% blocks executed 100%
        7:   14:void node_destroy(foxnode_t *nodeptr, void (*destructor)())
        -:   15:{
        7:   16:    if (*nodeptr == NULL)
branch  0 taken 1 (fallthrough)
branch  1 taken 6
        1:   17:        return;
        6:   18:    if ((*nodeptr)->data != NULL && destructor != NULL)
branch  0 taken 5 (fallthrough)
branch  1 taken 1
branch  2 taken 4 (fallthrough)
branch  3 taken 1
        4:   19:        destructor(&(*nodeptr)->data);
call    0 returned 4
        6:   20:    free(*nodeptr);
        6:   21:    *nodeptr = NULL;
        -:   22:}
